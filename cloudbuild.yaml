timeout: '1200s'
substitutions:
  _SERVICE_NAME: quotelinkercom
  _REGION: us-central1
  _SITE_URL: https://www.quotelinker.com
  
steps:
  # Install dependencies using Node.js 20
  - name: 'node:20'
    entrypoint: 'npm'
    args: ['install']
  
  # Run TypeScript check (only log errors but don't fail build)
  - name: 'node:20'
    entrypoint: 'npm'
    args: ['run', 'type-check']
    id: 'type-check'
    allowFailure: true
  
  # Run ESLint check (only log errors but don't fail build)
  - name: 'node:20'
    entrypoint: 'npm'
    args: ['run', 'lint']
    id: 'lint'
    allowFailure: true
  
  # Build the Next.js application
  - name: 'node:20'
    entrypoint: 'npm'
    args: ['run', 'build:cloud']
  
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t',
        'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$SHORT_SHA',
        '.',
      ]
  
  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$SHORT_SHA']
  
  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      [
        'run',
        'deploy',
        '${_SERVICE_NAME}',
        '--image',
        'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$SHORT_SHA',
        '--region',
        '${_REGION}',
        '--platform',
        'managed',
        '--allow-unauthenticated',
        '--set-env-vars',
        'NEXT_PUBLIC_SITE_URL=${_SITE_URL}'
      ]
  
  # Run smoke test
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - -c
      - |
        URL=$(gcloud run services describe ${_SERVICE_NAME} --platform=managed --region=${_REGION} --format='value(status.url)')
        curl --fail --retry 3 --retry-delay 5 $URL/api/healthz

images:
  - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$SHORT_SHA'
